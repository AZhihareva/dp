{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Anastasia/Documents/Study/dp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Anastasia/Documents/Study/dp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { getGroups } from \"./groups\";\nvar accounts = [{\n  id: 'user1',\n  login: 'account1',\n  password: \"12345\",\n  groups: ['group1', 'group2']\n}];\nexport function getAccounts() {\n  return _getAccounts.apply(this, arguments);\n}\nfunction _getAccounts() {\n  _getAccounts = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", accounts);\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getAccounts.apply(this, arguments);\n}\nfunction getOwnedGroups(_x) {\n  return _getOwnedGroups.apply(this, arguments);\n}\nfunction _getOwnedGroups() {\n  _getOwnedGroups = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accountId) {\n    var groups;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return getGroups();\n        case 2:\n          groups = _context2.sent;\n          return _context2.abrupt(\"return\", groups.filter(function (group) {\n            return group.ownerId === accountId;\n          }));\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getOwnedGroups.apply(this, arguments);\n}","map":{"version":3,"names":["getGroups","accounts","id","login","password","groups","getAccounts","_getAccounts","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","getOwnedGroups","_x","_getOwnedGroups","_callee2","accountId","_callee2$","_context2","sent","filter","group","ownerId"],"sources":["C:/Users/Anastasia/Documents/Study/dp/src/state/accounts.js"],"sourcesContent":["import { getGroups } from \"./groups\";\r\n\r\nconst accounts = [\r\n    {\r\n        id: 'user1',\r\n        login: 'account1',\r\n        password: \"12345\",\r\n        groups: ['group1', 'group2']\r\n    }\r\n];\r\n\r\nexport async function getAccounts() {\r\n    return accounts;\r\n}\r\n\r\nasync function getOwnedGroups(accountId) {\r\n    const groups = await getGroups();\r\n    return groups.filter(group => group.ownerId === accountId);\r\n}"],"mappings":";;;;;;AAAA,SAASA,SAAS,QAAQ,UAAU;AAEpC,IAAMC,QAAQ,GAAG,CACb;EACIC,EAAE,EAAE,OAAO;EACXC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE,OAAO;EACjBC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ;AAC/B,CAAC,CACJ;AAED,gBAAsBC,WAAWA,CAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEhC,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAFM,SAAAC,QAAA;IAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA,WACIlB,QAAQ;QAAA;QAAA;UAAA,OAAAe,QAAA,CAAAI,IAAA;MAAA;IAAA,GAAAP,OAAA;EAAA,CAClB;EAAA,OAAAN,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEcY,cAAcA,CAAAC,EAAA;EAAA,OAAAC,eAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAc,gBAAA;EAAAA,eAAA,GAAAb,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAA7B,SAAAY,SAA8BC,SAAS;IAAA,IAAApB,MAAA;IAAA,OAAAM,mBAAA,GAAAG,IAAA,UAAAY,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAV,IAAA,GAAAU,SAAA,CAAAT,IAAA;QAAA;UAAAS,SAAA,CAAAT,IAAA;UAAA,OACdlB,SAAS,CAAC,CAAC;QAAA;UAA1BK,MAAM,GAAAsB,SAAA,CAAAC,IAAA;UAAA,OAAAD,SAAA,CAAAR,MAAA,WACLd,MAAM,CAACwB,MAAM,CAAC,UAAAC,KAAK;YAAA,OAAIA,KAAK,CAACC,OAAO,KAAKN,SAAS;UAAA,EAAC;QAAA;QAAA;UAAA,OAAAE,SAAA,CAAAP,IAAA;MAAA;IAAA,GAAAI,QAAA;EAAA,CAC7D;EAAA,OAAAD,eAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}