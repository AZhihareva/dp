{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withKeys as _withKeys, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"container\",\n  id: \"app\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card\"\n};\nvar _hoisted_3 = {\n  \"class\": \"form-control\"\n};\nvar _hoisted_4 = [\"placeholder\"];\nvar _hoisted_5 = {\n  \"class\": \"form-control\"\n};\nvar _hoisted_6 = [\"placeholder\"];\nvar _hoisted_7 = {\n  key: 0,\n  \"class\": \"list\"\n};\nvar _hoisted_8 = {\n  \"class\": \"list-item\"\n};\nvar _hoisted_9 = [\"onClick\"];\nvar _hoisted_10 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString($setup.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: $setup.group,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.groupName = $event;\n    })\n  }, null, 8 /* PROPS */, _hoisted_4), [[_vModelText, $setup.groupName]])]), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: $setup.participants,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.inputValue = $event;\n    }),\n    onKeypress: _withKeys($setup.addName, [\"enter\"])\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_6), [[_vModelText, $setup.inputValue]]), _createCommentVNode(\" v-bind: = :, v-on: = @ \")]), _createElementVNode(\"button\", {\n    \"class\": \"btn\",\n    onClick: $setup.addName\n  }, \"Add\"), _cache[2] || (_cache[2] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _ctx.names.size !== 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.names, function (name) {\n    return _openBlock(), _createElementBlock(\"li\", _hoisted_8, [_createTextVNode(_toDisplayString(name) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      \"class\": \"btn danger\",\n      onClick: function onClick($event) {\n        return $setup.deleteName(name);\n      }\n    }, \"-\", 8 /* PROPS */, _hoisted_9)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"No participants yet. Add first participant!\")), _ctx.names.size !== 0 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    \"class\": \"btn primary\",\n    onClick: $setup.acceptListOfNames\n  }, \"Accept\")) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","title","_hoisted_3","type","placeholder","group","_cache","$event","groupName","_hoisted_4","_hoisted_5","participants","inputValue","onKeypress","_withKeys","addName","_hoisted_6","_createCommentVNode","onClick","_ctx","names","size","_hoisted_7","_Fragment","_renderList","name","_hoisted_8","_createTextVNode","deleteName","_hoisted_9","_hoisted_10","acceptListOfNames"],"sources":["C:\\Users\\Anastasia\\Documents\\Study\\dp\\src\\views\\Names.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\" id=\"app\">\r\n      <div class=\"card\">\r\n        <h1>{{ title }}</h1>\r\n        <div class=\"form-control\">\r\n            <input type=\"text\"\r\n            :placeholder=\"group\"\r\n            v-model=\"groupName\" \r\n            />\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <input type=\"text\" \r\n          :placeholder=\"participants\" \r\n          v-model=\"inputValue\" \r\n          @keypress.enter=\"addName\" \r\n          /> <!-- v-bind: = :, v-on: = @ -->\r\n        </div>\r\n        <button class=\"btn\" v-on:click=\"addName\">Add</button>\r\n        <hr />\r\n        <ul class=\"list\" v-if=\"names.size !== 0\">\r\n          <li class=\"list-item\" v-for=\"name of names\">{{ name }}\r\n            <button class=\"btn danger\" v-on:click=\"deleteName(name)\">-</button>\r\n          </li>\r\n        </ul>\r\n        <div v-else>No participants yet. Add first participant!</div>\r\n        <button class=\"btn primary\" \r\n        v-on:click=\"acceptListOfNames\"\r\n        v-if=\"names.size !== 0\">Accept</button>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from 'vue';\r\nimport {addUser} from '../state/groups';\r\n\r\nconst users = addUser();\r\nconst title = ref('List of names');\r\nconst participants = ref(\"Input user's login\");\r\nlet inputValue = ref('');\r\nlet groupName=  ref('');\r\nconst group = ref('Input unique group name');\r\nfunction addName() {\r\n    if (inputValue.value !== '') {\r\n        if (this.names.has(this.inputValue)) {\r\n            alert('Please, input UNIQUE participant name');\r\n        } else {\r\n            this.names.add(this.inputValue);\r\n        }\r\n        this.inputValue = '';\r\n    }\r\n}\r\n\r\nfunction deleteName(name) {\r\n            console.log(name);\r\n            this.names.delete(name)\r\n        }\r\n\r\nfunction acceptListOfNames(){\r\n            if (this.names.size < 3) {\r\n                alert(`Please add more participants. You need at least 3 to play. Right now you have ${this.names.size}`);\r\n            } else if (this.group === '') {\r\n                alert('Please name your group');\r\n            } else {\r\n                this.$router.push('/groups');\r\n            }\r\n        }\r\n</script>"],"mappings":";;EACS,SAAM,WAAW;EAACA,EAAE,EAAC;;;EACnB,SAAM;AAAM;;EAEV,SAAM;AAAc;iBAJjC;;EAUa,SAAM;AAAc;iBAVjC;;EAAAC,GAAA;EAmBY,SAAM;;;EACJ,SAAM;AAAW;iBApB/B;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJD,mBAAA,CAAoB,YAAAE,gBAAA,CAAbC,MAAA,CAAAC,KAAK,kBACZJ,mBAAA,CAKM,OALNK,UAKM,G,gBAJFL,mBAAA,CAGE;IAHKM,IAAI,EAAC,MAAM;IACjBC,WAAW,EAAEJ,MAAA,CAAAK,KAAK;IAN/B,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAOqBP,MAAA,CAAAQ,SAAS,GAAAD,MAAA;IAAA;0BAP9BE,UAAA,I,cAOqBT,MAAA,CAAAQ,SAAS,E,KAGtBX,mBAAA,CAMM,OANNa,UAMM,G,gBALJb,mBAAA,CAIE;IAJKM,IAAI,EAAC,MAAM;IACjBC,WAAW,EAAEJ,MAAA,CAAAW,YAAY;IAZpC,uBAAAL,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAamBP,MAAA,CAAAY,UAAU,GAAAL,MAAA;IAAA;IAClBM,UAAQ,EAdnBC,SAAA,CAc2Bd,MAAA,CAAAe,OAAO;2CAdlCC,UAAA,I,cAamBhB,MAAA,CAAAY,UAAU,E,GAEhBK,mBAAA,4BAA+B,C,GAEpCpB,mBAAA,CAAqD;IAA7C,SAAM,KAAK;IAAMqB,OAAK,EAAElB,MAAA,CAAAe;KAAS,KAAG,G,0BAC5ClB,mBAAA,CAAM,sCACiBsB,IAAA,CAAAC,KAAK,CAACC,IAAI,U,cAAjC1B,mBAAA,CAIK,MAJL2B,UAIK,I,kBAHH3B,mBAAA,CAEK4B,SAAA,QAtBfC,WAAA,CAoB+CL,IAAA,CAAAC,KAAK,EApBpD,UAoBuCK,IAAI;yBAAjC9B,mBAAA,CAEK,MAFL+B,UAEK,GAtBfC,gBAAA,CAAA5B,gBAAA,CAoByD0B,IAAI,IAAG,GACpD,iBAAA5B,mBAAA,CAAmE;MAA3D,SAAM,YAAY;MAAMqB,OAAK,WAALA,OAAKA,CAAAX,MAAA;QAAA,OAAEP,MAAA,CAAA4B,UAAU,CAACH,IAAI;MAAA;OAAG,GAAC,iBArBtEI,UAAA,E;uDAwBQlC,mBAAA,CAA6D,OAxBrEmC,WAAA,EAwBoB,6CAA2C,IAGjDX,IAAA,CAAAC,KAAK,CAACC,IAAI,U,cAFhB1B,mBAAA,CAEuC;IA3B/CD,GAAA;IAyBgB,SAAM,aAAa;IACtBwB,OAAK,EAAElB,MAAA,CAAA+B;KACY,QAAM,KA3BtCd,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}