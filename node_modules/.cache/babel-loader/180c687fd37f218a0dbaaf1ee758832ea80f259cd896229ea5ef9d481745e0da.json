{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Anastasia/Documents/Study/dp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ref, onMounted } from 'vue'; // Импортируем необходимые функции из Vue\nimport { useRouter } from 'vue-router'; // Для навигации между страницами\n\nvar __default__ = {\n  name: 'GameView',\n  setup: function setup() {\n    // Инициализация роутера для навигации\n    var router = useRouter();\n\n    // Реактивные переменные (аналог data() в Options API)\n    var participants = ref(JSON.parse(localStorage.getItem(\"participants\")) || []);\n    // ref() делает переменную реактивной - Vue будет отслеживать её изменения\n\n    var currentResult = ref(\"\"); // Текущий результат (получатель/отправитель)\n    var selectedParticipant = ref(\"\"); // Выбранный участник в select\n\n    // Состояние поиска\n    var isSearchingBySender = ref(true);\n    var isSearchingByRecipient = ref(false);\n\n    // Цвета (можно вынести в отдельный файл конфигурации)\n    var background = \"#5ac99d\";\n    var red = \"#E34424\";\n    var green = \"#1fc62a\";\n\n    // Мапы для хранения соответствий\n    var senderToRecipient = ref(new Map());\n    var recipientToSender = ref(new Map());\n\n    // Хук жизненного цикла - выполняется при монтировании компонента\n    onMounted(function () {\n      if (participants.value.length > 0) {\n        selectedParticipant.value = participants.value[0];\n        generateNewSolution();\n        fill();\n      }\n    });\n\n    // Функция перемешивания массива\n    function shuffleArray(arr) {\n      for (var i = arr.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        // Деструктуризация для обмена значений\n        var _ref = [arr[j], arr[i]];\n        arr[i] = _ref[0];\n        arr[j] = _ref[1];\n      }\n      return arr;\n    }\n\n    // Генерация решения - кто кому отправляет\n    function generateSolution() {\n      var shuffledParticipants = shuffleArray(_toConsumableArray(participants.value)); // Создаем копию массива\n      senderToRecipient.value.clear();\n      recipientToSender.value.clear();\n\n      // Создаем пары отправитель-получатель\n      for (var i = 0; i < shuffledParticipants.length; i++) {\n        var sender = shuffledParticipants[i];\n        var recipient = shuffledParticipants[(i + 1) % shuffledParticipants.length];\n        senderToRecipient.value.set(sender, recipient);\n        recipientToSender.value.set(recipient, sender);\n      }\n    }\n\n    // Обновление решения\n    function generateNewSolution() {\n      generateSolution();\n      fill(); // Обновляем отображение\n    }\n\n    // Заполнение результата в зависимости от выбранного режима\n    function fill() {\n      if (isSearchingBySender.value) {\n        currentResult.value = senderToRecipient.value.get(selectedParticipant.value);\n      } else {\n        currentResult.value = recipientToSender.value.get(selectedParticipant.value);\n      }\n    }\n\n    // Переключение в режим поиска по отправителю\n    function searchBySender() {\n      isSearchingBySender.value = true;\n      isSearchingByRecipient.value = false;\n      fill();\n    }\n\n    // Переключение в режим поиска по получателю\n    function searchByRecipient() {\n      isSearchingByRecipient.value = true;\n      isSearchingBySender.value = false;\n      fill();\n    }\n\n    // Навигация\n    function edit() {\n      localStorage.setItem(\"participants\", JSON.stringify(participants.value));\n      router.push('/'); // Переход на главную через Vue Router\n    }\n    function home() {\n      if (confirm('All data will be deleted. Continue?')) {\n        localStorage.removeItem(\"participants\");\n        router.push('/');\n      }\n    }\n\n    // Возвращаем все переменные и функции, чтобы они были доступны в template\n    return {\n      participants: participants,\n      currentResult: currentResult,\n      selectedParticipant: selectedParticipant,\n      isSearchingBySender: isSearchingBySender,\n      isSearchingByRecipient: isSearchingByRecipient,\n      background: background,\n      red: red,\n      green: green,\n      generateNewSolution: generateNewSolution,\n      fill: fill,\n      searchBySender: searchBySender,\n      searchByRecipient: searchByRecipient,\n      edit: edit,\n      home: home\n    };\n  }\n};\nimport { useCssVars as _useCssVars } from 'vue';\nvar __injectCSSVars__ = function __injectCSSVars__() {\n  _useCssVars(function (_ctx) {\n    return {\n      \"3614b62c-background\": _ctx.background,\n      \"3614b62c-isSearchingBySender\\ \\?\\ green\\ \\:\\ red\": _ctx.isSearchingBySender ? _ctx.green : _ctx.red\n    };\n  });\n};\nvar __setup__ = __default__.setup;\n__default__.setup = __setup__ ? function (props, ctx) {\n  __injectCSSVars__();\n  return __setup__(props, ctx);\n} : __injectCSSVars__;\nexport default __default__;","map":{"version":3,"names":["ref","onMounted","useRouter","__default__","name","setup","router","participants","JSON","parse","localStorage","getItem","currentResult","selectedParticipant","isSearchingBySender","isSearchingByRecipient","background","red","green","senderToRecipient","Map","recipientToSender","value","length","generateNewSolution","fill","shuffleArray","arr","i","j","Math","floor","random","_ref","generateSolution","shuffledParticipants","_toConsumableArray","clear","sender","recipient","set","get","searchBySender","searchByRecipient","edit","setItem","stringify","push","home","confirm","removeItem"],"sources":["C:\\Users\\Anastasia\\Documents\\Study\\dp\\src\\views\\Game.vue"],"sourcesContent":["<template>\r\n  <!-- Основная структура сохранилась, но изменился синтаксис обработчиков -->\r\n  <div id=\"header\" @click=\"home\">\r\n    <!-- @click - это сокращение для v-on:click -->\r\n  </div>\r\n\r\n  <div id=\"buttons-container\">\r\n    <div \r\n      class=\"header-button views\" \r\n      id=\"search-by-sender\"\r\n      @mouseover=\"hoverSender\"\r\n      @mouseout=\"unhoverSender\"\r\n      @click=\"searchBySender\"\r\n      :style=\"{ backgroundColor: isSearchingBySender ? red : 'transparent' }\"\r\n    >\r\n      Search by Sender\r\n    </div>\r\n    <!-- Аналогичные изменения для других кнопок -->\r\n\r\n    <!-- Выпадающий список теперь генерируется через v-for -->\r\n    <select @change=\"fill\" v-model=\"selectedParticipant\">\r\n      <option v-for=\"participant in participants\" :key=\"participant\" :value=\"participant\">\r\n        {{ participant }}\r\n      </option>\r\n    </select>\r\n\r\n    <!-- Блок с результатом теперь реактивный -->\r\n    <div class=\"reveal-content\" :style=\"{ backgroundColor: isSearchingBySender ? green : red }\">\r\n      {{ currentResult }} <!-- Данные будут автоматически обновляться -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'; // Импортируем необходимые функции из Vue\r\nimport { useRouter } from 'vue-router'; // Для навигации между страницами\r\n\r\nexport default {\r\n  name: 'GameView',\r\n  setup() {\r\n    // Инициализация роутера для навигации\r\n    const router = useRouter();\r\n\r\n    // Реактивные переменные (аналог data() в Options API)\r\n    const participants = ref(JSON.parse(localStorage.getItem(\"participants\")) || []);\r\n    // ref() делает переменную реактивной - Vue будет отслеживать её изменения\r\n    \r\n    const currentResult = ref(\"\"); // Текущий результат (получатель/отправитель)\r\n    const selectedParticipant = ref(\"\"); // Выбранный участник в select\r\n    \r\n    // Состояние поиска\r\n    const isSearchingBySender = ref(true);\r\n    const isSearchingByRecipient = ref(false);\r\n    \r\n    // Цвета (можно вынести в отдельный файл конфигурации)\r\n    const background = \"#5ac99d\";\r\n    const red = \"#E34424\";\r\n    const green = \"#1fc62a\";\r\n    \r\n    // Мапы для хранения соответствий\r\n    const senderToRecipient = ref(new Map());\r\n    const recipientToSender = ref(new Map());\r\n\r\n    // Хук жизненного цикла - выполняется при монтировании компонента\r\n    onMounted(() => {\r\n      if (participants.value.length > 0) {\r\n        selectedParticipant.value = participants.value[0];\r\n        generateNewSolution();\r\n        fill();\r\n      }\r\n    });\r\n\r\n    // Функция перемешивания массива\r\n    function shuffleArray(arr) {\r\n      for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]]; // Деструктуризация для обмена значений\r\n      }\r\n      return arr;\r\n    }\r\n\r\n    // Генерация решения - кто кому отправляет\r\n    function generateSolution() {\r\n      let shuffledParticipants = shuffleArray([...participants.value]); // Создаем копию массива\r\n      senderToRecipient.value.clear();\r\n      recipientToSender.value.clear();\r\n      \r\n      // Создаем пары отправитель-получатель\r\n      for (let i = 0; i < shuffledParticipants.length; i++) {\r\n        const sender = shuffledParticipants[i];\r\n        const recipient = shuffledParticipants[(i + 1) % shuffledParticipants.length];\r\n        senderToRecipient.value.set(sender, recipient);\r\n        recipientToSender.value.set(recipient, sender);\r\n      }\r\n    }\r\n\r\n    // Обновление решения\r\n    function generateNewSolution() {\r\n      generateSolution();\r\n      fill(); // Обновляем отображение\r\n    }\r\n\r\n    // Заполнение результата в зависимости от выбранного режима\r\n    function fill() {\r\n      if (isSearchingBySender.value) {\r\n        currentResult.value = senderToRecipient.value.get(selectedParticipant.value);\r\n      } else {\r\n        currentResult.value = recipientToSender.value.get(selectedParticipant.value);\r\n      }\r\n    }\r\n\r\n    // Переключение в режим поиска по отправителю\r\n    function searchBySender() {\r\n      isSearchingBySender.value = true;\r\n      isSearchingByRecipient.value = false;\r\n      fill();\r\n    }\r\n\r\n    // Переключение в режим поиска по получателю\r\n    function searchByRecipient() {\r\n      isSearchingByRecipient.value = true;\r\n      isSearchingBySender.value = false;\r\n      fill();\r\n    }\r\n\r\n    // Навигация\r\n    function edit() {\r\n      localStorage.setItem(\"participants\", JSON.stringify(participants.value));\r\n      router.push('/'); // Переход на главную через Vue Router\r\n    }\r\n\r\n    function home() {\r\n      if (confirm('All data will be deleted. Continue?')) {\r\n        localStorage.removeItem(\"participants\");\r\n        router.push('/');\r\n      }\r\n    }\r\n\r\n    // Возвращаем все переменные и функции, чтобы они были доступны в template\r\n    return {\r\n      participants,\r\n      currentResult,\r\n      selectedParticipant,\r\n      isSearchingBySender,\r\n      isSearchingByRecipient,\r\n      background,\r\n      red,\r\n      green,\r\n      generateNewSolution,\r\n      fill,\r\n      searchBySender,\r\n      searchByRecipient,\r\n      edit,\r\n      home\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Модификатор scoped ограничивает стили только этим компонентом */\r\n#Who-Sent-It {\r\n  margin-top: 20px;\r\n  width: 400px;\r\n}\r\n\r\n/* Используем v-bind для динамических цветов */\r\n#header {\r\n  background-color: v-bind(background);\r\n}\r\n\r\n.reveal-content {\r\n  background-color: v-bind(isSearchingBySender ? green : red);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}