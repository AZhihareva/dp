{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { getAccounts } from \"./accounts\";\nvar groups = [{\n  name: 'account1',\n  ownerId: 'user1'\n}];\nexport function getGroupUsers(groupId) {\n  var users = getAccounts();\n  return users.filter(function (user) {\n    return user.groupIds.includes(groupId);\n  });\n}\nexport function getGroups() {\n  return groups;\n}\nexport function getGroup(groupId) {\n  return groups.find(function (group) {\n    return group.id === groupId;\n  });\n}","map":{"version":3,"names":["getAccounts","groups","name","ownerId","getGroupUsers","groupId","users","filter","user","groupIds","includes","getGroups","getGroup","find","group","id"],"sources":["C:/Users/Anastasia/Documents/Study/dp/src/state/groups.js"],"sourcesContent":["import { getAccounts } from \"./accounts\";\r\n\r\nconst groups = [\r\n    {\r\n        name: 'account1',\r\n        ownerId: 'user1',\r\n\r\n    }\r\n];\r\n\r\nexport function getGroupUsers(groupId) {\r\n    const users = getAccounts();\r\n    return users.filter(user => user.groupIds.includes(groupId));\r\n}\r\nexport function getGroups() {\r\n    return groups;\r\n}\r\n\r\nexport function getGroup(groupId) {\r\n    return groups.find(group => group.id === groupId);\r\n}"],"mappings":";;;;;;;AAAA,SAASA,WAAW,QAAQ,YAAY;AAExC,IAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,UAAU;EAChBC,OAAO,EAAE;AAEb,CAAC,CACJ;AAED,OAAO,SAASC,aAAaA,CAACC,OAAO,EAAE;EACnC,IAAMC,KAAK,GAAGN,WAAW,CAAC,CAAC;EAC3B,OAAOM,KAAK,CAACC,MAAM,CAAC,UAAAC,IAAI;IAAA,OAAIA,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAACL,OAAO,CAAC;EAAA,EAAC;AAChE;AACA,OAAO,SAASM,SAASA,CAAA,EAAG;EACxB,OAAOV,MAAM;AACjB;AAEA,OAAO,SAASW,QAAQA,CAACP,OAAO,EAAE;EAC9B,OAAOJ,MAAM,CAACY,IAAI,CAAC,UAAAC,KAAK;IAAA,OAAIA,KAAK,CAACC,EAAE,KAAKV,OAAO;EAAA,EAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}