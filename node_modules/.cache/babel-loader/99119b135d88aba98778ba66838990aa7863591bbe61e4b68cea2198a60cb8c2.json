{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  id: \"buttons-container\"\n};\nvar _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Основная структура сохранилась, но изменился синтаксис обработчиков \"), _createElementVNode(\"div\", {\n    id: \"header\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.home && $setup.home.apply($setup, arguments);\n    })\n  }, [_createCommentVNode(\" @click - это сокращение для v-on:click \")]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    \"class\": \"header-button views\",\n    id: \"search-by-sender\",\n    onMouseover: _cache[1] || (_cache[1] = function () {\n      return _ctx.hoverSender && _ctx.hoverSender.apply(_ctx, arguments);\n    }),\n    onMouseout: _cache[2] || (_cache[2] = function () {\n      return _ctx.unhoverSender && _ctx.unhoverSender.apply(_ctx, arguments);\n    }),\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $setup.searchBySender && $setup.searchBySender.apply($setup, arguments);\n    }),\n    style: _normalizeStyle({\n      backgroundColor: $setup.isSearchingBySender ? $setup.red : 'transparent'\n    })\n  }, \" Search by Sender \", 36 /* STYLE, NEED_HYDRATION */), _createCommentVNode(\" Аналогичные изменения для других кнопок \"), _createCommentVNode(\" Выпадающий список теперь генерируется через v-for \"), _withDirectives(_createElementVNode(\"select\", {\n    onChange: _cache[4] || (_cache[4] = function () {\n      return $setup.fill && $setup.fill.apply($setup, arguments);\n    }),\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n      return $setup.selectedParticipant = $event;\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.participants, function (participant) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: participant,\n      value: participant\n    }, _toDisplayString(participant), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.selectedParticipant]]), _createCommentVNode(\" Блок с результатом теперь реактивный \"), _createElementVNode(\"div\", {\n    \"class\": \"reveal-content\",\n    style: _normalizeStyle({\n      backgroundColor: $setup.isSearchingBySender ? $setup.green : $setup.red\n    })\n  }, [_createTextVNode(_toDisplayString($setup.currentResult) + \" \", 1 /* TEXT */), _createCommentVNode(\" Данные будут автоматически обновляться \")], 4 /* STYLE */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","onClick","_cache","$setup","home","apply","arguments","_hoisted_1","onMouseover","_ctx","hoverSender","onMouseout","unhoverSender","searchBySender","style","_normalizeStyle","backgroundColor","isSearchingBySender","red","onChange","fill","$event","selectedParticipant","_renderList","participants","participant","key","value","_hoisted_2","green","_createTextVNode","_toDisplayString","currentResult"],"sources":["C:\\Users\\Anastasia\\Documents\\Study\\dp\\src\\views\\Game.vue"],"sourcesContent":["<template>\r\n  <!-- Основная структура сохранилась, но изменился синтаксис обработчиков -->\r\n  <div id=\"header\" @click=\"home\">\r\n    <!-- @click - это сокращение для v-on:click -->\r\n  </div>\r\n\r\n  <div id=\"buttons-container\">\r\n    <div \r\n      class=\"header-button views\" \r\n      id=\"search-by-sender\"\r\n      @mouseover=\"hoverSender\"\r\n      @mouseout=\"unhoverSender\"\r\n      @click=\"searchBySender\"\r\n      :style=\"{ backgroundColor: isSearchingBySender ? red : 'transparent' }\"\r\n    >\r\n      Search by Sender\r\n    </div>\r\n    <!-- Аналогичные изменения для других кнопок -->\r\n\r\n    <!-- Выпадающий список теперь генерируется через v-for -->\r\n    <select @change=\"fill\" v-model=\"selectedParticipant\">\r\n      <option v-for=\"participant in participants\" :key=\"participant\" :value=\"participant\">\r\n        {{ participant }}\r\n      </option>\r\n    </select>\r\n\r\n    <!-- Блок с результатом теперь реактивный -->\r\n    <div class=\"reveal-content\" :style=\"{ backgroundColor: isSearchingBySender ? green : red }\">\r\n      {{ currentResult }} <!-- Данные будут автоматически обновляться -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'; // Импортируем необходимые функции из Vue\r\nimport { useRouter } from 'vue-router'; // Для навигации между страницами\r\n\r\nexport default {\r\n  name: 'GameView',\r\n  setup() {\r\n    // Инициализация роутера для навигации\r\n    const router = useRouter();\r\n\r\n    // Реактивные переменные (аналог data() в Options API)\r\n    const participants = ref(JSON.parse(localStorage.getItem(\"participants\")) || []);\r\n    // ref() делает переменную реактивной - Vue будет отслеживать её изменения\r\n    \r\n    const currentResult = ref(\"\"); // Текущий результат (получатель/отправитель)\r\n    const selectedParticipant = ref(\"\"); // Выбранный участник в select\r\n    \r\n    // Состояние поиска\r\n    const isSearchingBySender = ref(true);\r\n    const isSearchingByRecipient = ref(false);\r\n    \r\n    // Цвета (можно вынести в отдельный файл конфигурации)\r\n    const background = \"#5ac99d\";\r\n    const red = \"#E34424\";\r\n    const green = \"#1fc62a\";\r\n    \r\n    // Мапы для хранения соответствий\r\n    const senderToRecipient = ref(new Map());\r\n    const recipientToSender = ref(new Map());\r\n\r\n    // Хук жизненного цикла - выполняется при монтировании компонента\r\n    onMounted(() => {\r\n      if (participants.value.length > 0) {\r\n        selectedParticipant.value = participants.value[0];\r\n        generateNewSolution();\r\n        fill();\r\n      }\r\n    });\r\n\r\n    // Функция перемешивания массива\r\n    function shuffleArray(arr) {\r\n      for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]]; // Деструктуризация для обмена значений\r\n      }\r\n      return arr;\r\n    }\r\n\r\n    // Генерация решения - кто кому отправляет\r\n    function generateSolution() {\r\n      let shuffledParticipants = shuffleArray([...participants.value]); // Создаем копию массива\r\n      senderToRecipient.value.clear();\r\n      recipientToSender.value.clear();\r\n      \r\n      // Создаем пары отправитель-получатель\r\n      for (let i = 0; i < shuffledParticipants.length; i++) {\r\n        const sender = shuffledParticipants[i];\r\n        const recipient = shuffledParticipants[(i + 1) % shuffledParticipants.length];\r\n        senderToRecipient.value.set(sender, recipient);\r\n        recipientToSender.value.set(recipient, sender);\r\n      }\r\n    }\r\n\r\n    // Обновление решения\r\n    function generateNewSolution() {\r\n      generateSolution();\r\n      fill(); // Обновляем отображение\r\n    }\r\n\r\n    // Заполнение результата в зависимости от выбранного режима\r\n    function fill() {\r\n      if (isSearchingBySender.value) {\r\n        currentResult.value = senderToRecipient.value.get(selectedParticipant.value);\r\n      } else {\r\n        currentResult.value = recipientToSender.value.get(selectedParticipant.value);\r\n      }\r\n    }\r\n\r\n    // Переключение в режим поиска по отправителю\r\n    function searchBySender() {\r\n      isSearchingBySender.value = true;\r\n      isSearchingByRecipient.value = false;\r\n      fill();\r\n    }\r\n\r\n    // Переключение в режим поиска по получателю\r\n    function searchByRecipient() {\r\n      isSearchingByRecipient.value = true;\r\n      isSearchingBySender.value = false;\r\n      fill();\r\n    }\r\n\r\n    // Навигация\r\n    function edit() {\r\n      localStorage.setItem(\"participants\", JSON.stringify(participants.value));\r\n      router.push('/'); // Переход на главную через Vue Router\r\n    }\r\n\r\n    function home() {\r\n      if (confirm('All data will be deleted. Continue?')) {\r\n        localStorage.removeItem(\"participants\");\r\n        router.push('/');\r\n      }\r\n    }\r\n\r\n    // Возвращаем все переменные и функции, чтобы они были доступны в template\r\n    return {\r\n      participants,\r\n      currentResult,\r\n      selectedParticipant,\r\n      isSearchingBySender,\r\n      isSearchingByRecipient,\r\n      background,\r\n      red,\r\n      green,\r\n      generateNewSolution,\r\n      fill,\r\n      searchBySender,\r\n      searchByRecipient,\r\n      edit,\r\n      home\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Модификатор scoped ограничивает стили только этим компонентом */\r\n#Who-Sent-It {\r\n  margin-top: 20px;\r\n  width: 400px;\r\n}\r\n\r\n/* Используем v-bind для динамических цветов */\r\n#header {\r\n  background-color: v-bind(background);\r\n}\r\n\r\n.reveal-content {\r\n  background-color: v-bind(isSearchingBySender ? green : red);\r\n}\r\n</style>"],"mappings":";;;EAMOA,EAAE,EAAC;AAAmB;iBAN7B;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,yEAA4E,EAC5EC,mBAAA,CAEM;IAFDJ,EAAE,EAAC,QAAQ;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAC,IAAA,IAAAD,MAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAI;IAAA;MAC3BP,mBAAA,4CAA+C,C,GAGjDC,mBAAA,CAwBM,OAxBNO,UAwBM,GAvBJP,mBAAA,CASM;IARJ,SAAM,qBAAqB;IAC3BJ,EAAE,EAAC,kBAAkB;IACpBY,WAAS,EAAAN,MAAA,QAAAA,MAAA;MAAA,OAAEO,IAAA,CAAAC,WAAA,IAAAD,IAAA,CAAAC,WAAA,CAAAL,KAAA,CAAAI,IAAA,EAAAH,SAAA,CAAW;IAAA;IACtBK,UAAQ,EAAAT,MAAA,QAAAA,MAAA;MAAA,OAAEO,IAAA,CAAAG,aAAA,IAAAH,IAAA,CAAAG,aAAA,CAAAP,KAAA,CAAAI,IAAA,EAAAH,SAAA,CAAa;IAAA;IACvBL,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAU,cAAA,IAAAV,MAAA,CAAAU,cAAA,CAAAR,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAc;IAAA;IACrBQ,KAAK,EAbZC,eAAA;MAAAC,eAAA,EAaiCb,MAAA,CAAAc,mBAAmB,GAAGd,MAAA,CAAAe,GAAG;IAAA;KACrD,oBAED,mCACAnB,mBAAA,6CAAgD,EAEhDA,mBAAA,uDAA0D,E,gBAC1DC,mBAAA,CAIS;IAJAmB,QAAM,EAAAjB,MAAA,QAAAA,MAAA;MAAA,OAAEC,MAAA,CAAAiB,IAAA,IAAAjB,MAAA,CAAAiB,IAAA,CAAAf,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAI;IAAA;IApBzB,uBAAAJ,MAAA,QAAAA,MAAA,gBAAAmB,MAAA;MAAA,OAoBoClB,MAAA,CAAAmB,mBAAmB,GAAAD,MAAA;IAAA;yBACjDxB,mBAAA,CAESC,SAAA,QAvBfyB,WAAA,CAqBoCpB,MAAA,CAAAqB,YAAY,EArBhD,UAqBqBC,WAAW;yBAA1B5B,mBAAA,CAES;MAFoC6B,GAAG,EAAED,WAAW;MAAGE,KAAK,EAAEF;wBAClEA,WAAW,wBAtBtBG,UAAA;2FAoBoCzB,MAAA,CAAAmB,mBAAmB,E,GAMnDvB,mBAAA,0CAA6C,EAC7CC,mBAAA,CAEM;IAFD,SAAM,gBAAgB;IAAEc,KAAK,EA3BtCC,eAAA;MAAAC,eAAA,EA2B2Db,MAAA,CAAAc,mBAAmB,GAAGd,MAAA,CAAA0B,KAAK,GAAG1B,MAAA,CAAAe;IAAG;MA3B5FY,gBAAA,CAAAC,gBAAA,CA4BS5B,MAAA,CAAA6B,aAAa,IAAG,GAAC,iBAAAjC,mBAAA,4CAA+C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}