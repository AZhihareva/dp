{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Anastasia/Documents/Study/dp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport default {\n  name: 'GroupOfNames',\n  props: {\n    title: String,\n    isClick: Boolean\n  },\n  data: function data() {\n    return {\n      isClick: false,\n      names: new Set('Jack', 'Peter', 'Steve'),\n      senderToRecipient: new Map(),\n      recipientToSender: new Map()\n    };\n  },\n  methods: {\n    shuffleArray: function shuffleArray(arr) {\n      for (var i = arr.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [arr[j], arr[i]];\n        arr[i] = _ref[0];\n        arr[j] = _ref[1];\n      }\n      return arr;\n    },\n    createPairs: function createPairs() {\n      var shuffledParticipants = this.shuffleArray(_toConsumableArray(this.names));\n      for (var i = 0; i < shuffledParticipants.length; i++) {\n        var sender = shuffledParticipants[i];\n        var recipient = shuffledParticipants[(i + 1) % shuffledParticipants.length];\n        this.senderToRecipient.set(sender, recipient);\n        this.recipientToSender.set(recipient, sender);\n      }\n      this.$router.push('/game');\n    }\n  }\n};","map":{"version":3,"names":["name","props","title","String","isClick","Boolean","data","names","Set","senderToRecipient","Map","recipientToSender","methods","shuffleArray","arr","i","length","j","Math","floor","random","_ref","createPairs","shuffledParticipants","_toConsumableArray","sender","recipient","set","$router","push"],"sources":["C:\\Users\\Anastasia\\Documents\\Study\\dp\\src\\components\\GroupOfNames.vue"],"sourcesContent":["<template>\r\n    <div class=\"card\">\r\n        <h3>{{ title }}</h3>\r\n        <div class=\"buttons\">\r\n            <router-link to=\"/names\">\r\n                <button class=\"btn\">Edit</button>\r\n            </router-link>\r\n            <div v-if=\"senderToRecipient.size === 0\">\r\n                <button class=\" btn primary\" @click=\"createPairs()\">Generate pairs</button>\r\n            </div>\r\n            <div v-else>\r\n                <router-link to=\"/game\">\r\n                <button class=\" btn primary\">Show pairs</button>\r\n            </router-link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'GroupOfNames',\r\n        props: {\r\n            title: String,\r\n            isClick: Boolean\r\n        },\r\n        data() {\r\n            return {\r\n                isClick: false,\r\n                names: new Set('Jack', 'Peter', 'Steve'),\r\n                senderToRecipient: new Map(),\r\n                recipientToSender: new Map(),\r\n            }\r\n        },\r\n        methods: {\r\n            shuffleArray(arr) {\r\n                for (let i = arr.length - 1; i > 0; i--) {\r\n                    const j = Math.floor(Math.random() * (i + 1));\r\n                    [arr[i], arr[j]] = [arr[j], arr[i]];\r\n                }\r\n                return arr;\r\n            },\r\n            createPairs(){\r\n                let shuffledParticipants = this.shuffleArray([...this.names]);\r\n                for (let i = 0; i < shuffledParticipants.length; i++){\r\n                    const sender = shuffledParticipants[i];\r\n                    const recipient = shuffledParticipants[(i + 1) % shuffledParticipants.length];\r\n                    this.senderToRecipient.set(sender, recipient);\r\n                    this.recipientToSender.set(recipient, sender);\r\n                }\r\n                this.$router.push('/game');\r\n            }\r\n        }\r\n    }\r\n\r\n</script>"],"mappings":";;;;;;;;;;;;;;AAoBI,eAAe;EACXA,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACHC,KAAK,EAAEC,MAAM;IACbC,OAAO,EAAEC;EACb,CAAC;EACDC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHF,OAAO,EAAE,KAAK;MACdG,KAAK,EAAE,IAAIC,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;MACxCC,iBAAiB,EAAE,IAAIC,GAAG,CAAC,CAAC;MAC5BC,iBAAiB,EAAE,IAAID,GAAG,CAAC;IAC/B;EACJ,CAAC;EACDE,OAAO,EAAE;IACLC,YAAY,WAAZA,YAAYA,CAACC,GAAG,EAAE;MACd,KAAK,IAAIC,CAAA,GAAID,GAAG,CAACE,MAAK,GAAI,CAAC,EAAED,CAAA,GAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QACrC,IAAME,CAAA,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,KAAKL,CAAA,GAAI,CAAC,CAAC,CAAC;QAAA,IAAAM,IAAA,GAC1B,CAACP,GAAG,CAACG,CAAC,CAAC,EAAEH,GAAG,CAACC,CAAC,CAAC,CAAC;QAAlCD,GAAG,CAACC,CAAC,CAAC,GAAAM,IAAA;QAAEP,GAAG,CAACG,CAAC,CAAC,GAAAI,IAAA;MACnB;MACA,OAAOP,GAAG;IACd,CAAC;IACDQ,WAAW,WAAXA,WAAWA,CAAA,EAAE;MACT,IAAIC,oBAAmB,GAAI,IAAI,CAACV,YAAY,CAAAW,kBAAA,CAAK,IAAI,CAACjB,KAAK,CAAC,CAAC;MAC7D,KAAK,IAAIQ,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIQ,oBAAoB,CAACP,MAAM,EAAED,CAAC,EAAE,EAAC;QACjD,IAAMU,MAAK,GAAIF,oBAAoB,CAACR,CAAC,CAAC;QACtC,IAAMW,SAAQ,GAAIH,oBAAoB,CAAC,CAACR,CAAA,GAAI,CAAC,IAAIQ,oBAAoB,CAACP,MAAM,CAAC;QAC7E,IAAI,CAACP,iBAAiB,CAACkB,GAAG,CAACF,MAAM,EAAEC,SAAS,CAAC;QAC7C,IAAI,CAACf,iBAAiB,CAACgB,GAAG,CAACD,SAAS,EAAED,MAAM,CAAC;MACjD;MACA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;IAC9B;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}