{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"container pt-1\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"container\"\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"noGroups\"\n};\nvar _hoisted_5 = {\n  \"class\": \"form-control\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Your playing groups\", -1 /* HOISTED */)), _ctx.groups.length !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.user.groups, function (group) {\n    return _openBlock(), _createBlock($setup[\"GroupOfNames\"], {\n      title: group.name,\n      shuffleSize: group.senderToRecipient.size,\n      onShuffle: function onShuffle($event) {\n        return $setup.createPairs(group);\n      }\n    }, null, 8 /* PROPS */, [\"title\", \"shuffleSize\", \"onShuffle\"]);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"You don't have any groups yet\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Create your first group!\",\n    onInput: _cache[0] || (_cache[0] = function () {\n      return $setup.groupName && $setup.groupName.apply($setup, arguments);\n    })\n  }, null, 32 /* NEED_HYDRATION */)]), _cache[3] || (_cache[3] = _createElementVNode(\"div\", null, null, -1 /* HOISTED */))])), _createElementVNode(\"button\", {\n    \"class\": \"btn\",\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.$router.push('/names');\n    })\n  }, \"Create\")])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","groups","length","_hoisted_3","_Fragment","_renderList","$setup","user","group","_createBlock","title","name","shuffleSize","senderToRecipient","size","onShuffle","$event","createPairs","_hoisted_4","_hoisted_5","type","placeholder","onInput","_cache","groupName","apply","arguments","onClick","$router","push"],"sources":["C:\\Users\\Anastasia\\Documents\\Study\\dp\\src\\views\\Groups.vue"],"sourcesContent":["<template>\n  <div class=\"container pt-1\">\n    <div class=\"card\">\n      <h2>Your playing groups</h2>\n      <div class=\"container\" v-if=\"groups.length !== 0\">\n        <group-of-names \n          v-for=\"group in user.groups\" \n          :title=\"group.name\"\n          :shuffleSize=\"group.senderToRecipient.size\"\n          @shuffle=\"createPairs(group)\"\n        ></group-of-names>\n      </div>\n      <div class=\"noGroups\" v-else>\n        <h3>You don't have any groups yet</h3>\n        <div class=\"form-control\">\n            <input type=\"text\"\n            placeholder=\"Create your first group!\"\n            @input=\"groupName\" \n            />\n            </div>\n        <div>\n        </div>\n      </div>\n      <button class=\"btn\" @click=\"$router.push('/names')\">Create</button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport GroupOfNames from '../components/GroupOfNames.vue';\nimport {getUser} from '../state/accounts.js'\nimport { currentUser } from '../state/app.js';\nimport { getGroupUsers } from '../state/groups.js';\n\nconst user = getUser(currentUser.value);\n// const group = \nconst groupName = ref('');\n\nfunction shuffleArray(arr) {\n                for (let i = arr.length - 1; i > 0; i--) {\n                    const j = Math.floor(Math.random() * (i + 1));\n                    [arr[i], arr[j]] = [arr[j], arr[i]];\n                }\n                return arr;\n            }\n    function createPairs(group){\n        let shuffledParticipants = shuffleArray(getGroupUsers(group.name));\n        for (let i = 0; i < shuffledParticipants.length; i++){\n            const sender = shuffledParticipants[i];\n            const recipient = shuffledParticipants[(i + 1) % shuffledParticipants.length];\n            this.senderToRecipient.set(sender, recipient);\n            this.recipientToSender.set(recipient, sender);\n            }\n        router.push('/game');\n        }\n    function groupCreate(){\n      \n    }\n\n</script>\n\n<style>\n  .noGroups{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n</style>  "],"mappings":";;;;EACO,SAAM;AAAgB;;EACpB,SAAM;AAAM;;EAFrBA,GAAA;EAIW,SAAM;;;EAJjBA,GAAA;EAYW,SAAM;;;EAEJ,SAAM;AAAc;;uBAb/BC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJC,mBAAA,CAsBM,OAtBNC,UAsBM,G,0BArBJD,mBAAA,CAA4B,YAAxB,qBAAmB,sBACME,IAAA,CAAAC,MAAM,CAACC,MAAM,U,cAA1CN,mBAAA,CAOM,OAPNO,UAOM,I,kBANJP,mBAAA,CAKkBQ,SAAA,QAV1BC,WAAA,CAM0BC,MAAA,CAAAC,IAAI,CAACN,MAAM,EANrC,UAMiBO,KAAK;yBADdC,YAAA,CAKkBH,MAAA;MAHfI,KAAK,EAAEF,KAAK,CAACG,IAAI;MACjBC,WAAW,EAAEJ,KAAK,CAACK,iBAAiB,CAACC,IAAI;MACzCC,SAAO,WAAPA,SAAOA,CAAAC,MAAA;QAAA,OAAEV,MAAA,CAAAW,WAAW,CAACT,KAAK;MAAA;;uDAG/BZ,mBAAA,CAUM,OAVNsB,UAUM,G,0BATJpB,mBAAA,CAAsC,YAAlC,+BAA6B,sBACjCA,mBAAA,CAKU,OALVqB,UAKU,GAJNrB,mBAAA,CAGE;IAHKsB,IAAI,EAAC,MAAM;IAClBC,WAAW,EAAC,0BAA0B;IACrCC,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEjB,MAAA,CAAAkB,SAAA,IAAAlB,MAAA,CAAAkB,SAAA,CAAAC,KAAA,CAAAnB,MAAA,EAAAoB,SAAA,CAAS;IAAA;iEAGrB5B,mBAAA,CACM,sC,IAERA,mBAAA,CAAmE;IAA3D,SAAM,KAAK;IAAE6B,OAAK,EAAAJ,MAAA,QAAAA,MAAA,gBAAAP,MAAA;MAAA,OAAEhB,IAAA,CAAA4B,OAAO,CAACC,IAAI;IAAA;KAAY,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}